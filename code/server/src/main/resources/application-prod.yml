spring:
  datasource:
    /*% if (feature.D_C_Postgres) { %*/
    host: /*%= normalizeKebabCase(data.basicData.name) %*/-postgres
    username: /*%= normalizeSnakeCase(getDatabaseConfigFromSpec(data, 'username', 'postgres')) %*/
    password: /*%= normalizeSnakeCase(getDatabaseConfigFromSpec(data, 'password', 'postgres')) %*/
    /*% } else { %*/
    host: /*%= getDatabaseConfigFromSpec(data, 'host', '172.17.0.1') %*/
    username: /*%= getDatabaseConfigFromSpec(data, 'username', 'postgres') %*/
    password: /*%= getDatabaseConfigFromSpec(data, 'password', 'postgres') %*/
    /*% } %*/
    port: /*%= getDatabaseConfigFromSpec(data, 'port', '5432') %*/
    database: /*%= getDatabaseConfigFromSpec(data, 'database', 'gema') %*/
server:
  uploads: upload
  temporaryUploads: temporary
  #Default internal page size (Used for some high database usage methods)
  pageSize: 3
  port: /*%= getExtraConfigFromSpec(data, 'server_deploy_port', '9001') %*/
logging:
  level:
    root: INFO
    es.udc.lbd.gema.lps: DEBUG
    es.udc.lbd.gema.lps.model.util.EnumConverter: ERROR
properties:
  clientURL: /*%= getExtraConfigFromSpec(data, 'client_deploy_url', 'http://localhost:1234') %*/
  serverURL: /*%= getExtraConfigFromSpec(data, 'server_deploy_url', 'http://localhost:8080') %*/
  environment: prod
/*% if (feature.MV_MS_GeoServer) { %*/
geoserver:
  # GeoServer url also goes to gulp/config.js
  active: true
  /*% if (feature.D_C_Geoserver) { %*/
  url: 'http:///*%= normalizeKebabCase(data.basicData.name) %*/-geoserver:8080/geoserver'
  /*% } else { %*/
  url: /*%= getExtraConfigFromSpec(data, 'geoserver_url', 'http://localhost:9001/geoserver') %*/
  /*% } %*/
  user: /*%= getExtraConfigFromSpec(data, 'geoserver_user', 'admin') %*/
  password: /*%= getExtraConfigFromSpec(data, 'geoserver_password', 'geoserver') %*/
/*% } %*/
